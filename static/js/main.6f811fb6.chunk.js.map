{"version":3,"sources":["firebase/config.ts","util/ratingsArray.ts","firebase/provider.tsx","util/getMovie.ts","util/getDate.ts","util/infoString.ts","util/circleColor.ts","components/ratingCircle.tsx","util/averageRating.ts","components/movieDetails.tsx","components/ratingTable.tsx","util/sortRatings.ts","components/movie.tsx","components/navBar.tsx","components/movieCard.tsx","components/home.tsx","util/sortMovies.ts","components/viewerCard.tsx","components/viewerHome.tsx","components/viewerPage.tsx","images/tmdb.svg","components/footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["config","apiKey","process","authDomain","databaseURL","REACT_APP_DATABASE_URL","messagingSenderId","projectId","storageBucket","firebase","apps","length","initializeApp","database","ratingsArray","ratings","forEach","snapshot","push","name","key","score","val","FirebaseContext","createContext","FirebaseProvider","children","useState","movieArray","setMovieArray","useEffect","a","tempMovieArray","db","ref","once","title","date","Date","child","id","cage","getData","Provider","value","getMovie","fetch","json","budget","genres","imdb_id","overview","poster_path","backdrop_path","revenue","runtime","vote_average","vote_count","release_date","tagline","backdgrop_path","monthNames","getDate","getMonth","getFullYear","infoString","formatDate","genreString","item","i","time","hours","Math","floor","minutes","formatTime","bad","path","trail","star","mediocre","good","RatingCircle","rating","style","circleColor","text","toFixed","maxValue","strokeWidth","styles","buildStyles","pathColor","trailColor","textColor","averageRating","total","MovieDetails","className","toLocaleString","size","color","RatingTable","isMobile","sortBest","setSortBest","sortType","setSortType","changeSort","type","Table","hover","variant","onClick","sort","b","sortRatings","map","starRatedColor","starEmptyColor","starDimension","starSpacing","Movie","movieData","setMovieData","useMediaQuery","maxWidth","movie","getMovieData","details","backgroundImage","src","NavBar","Navbar","bg","expand","Toggle","aria-controls","Collapse","Brand","href","Nav","Link","MovieCard","averageScore","Card","to","replace","Title","numberOfStars","options","label","Home","cageFilter","setCageFilter","movies","useContext","slice","getTime","sortMovies","onColor","uncheckedIcon","checked","onChange","isSearchable","filter","x","ViewerCard","highestRated","lowestRated","Header","Body","ViewerHome","viewerData","sortViewers","viewer","ViewerPage","Footer","tmdb","App","setViewerData","viewerArray","index","findIndex","getViewerData","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f811fb6.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET\r\n}\r\n\r\nif(!firebase.apps.length){\r\n  firebase.initializeApp(config);\r\n}\r\n\r\n\r\nexport default firebase.database();","import firebase from 'firebase/app'\r\nimport 'firebase/database';\r\nimport { IRating } from '../types';\r\n\r\n\r\n\r\nexport const ratingsArray = (ratings: firebase.database.DataSnapshot):IRating[]=>{\r\n  let ratingsArray:IRating[] = [];\r\n  ratings.forEach((snapshot)=>{\r\n    ratingsArray.push({\r\n      name: snapshot.key!,\r\n      score: snapshot.val()\r\n    })\r\n  })\r\n  return ratingsArray;\r\n}","import firebase from 'firebase/app';\r\nimport db from './config';\r\nimport {createContext, useEffect, useState} from 'react';\r\nimport React from 'react';\r\nimport {ratingsArray} from '../util/ratingsArray';\r\nimport {IMovie} from '../types';\r\n\r\ninterface IProvider {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const FirebaseContext = createContext<IMovie[]>([]);\r\n\r\nconst FirebaseProvider = ({children}: IProvider) => {\r\n  const [movieArray, setMovieArray] = useState<IMovie[]>([]);\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      let tempMovieArray: IMovie[] = [];\r\n      const movies = await db.ref('movies').once('value');\r\n      movies.forEach((snapshot) => {\r\n        tempMovieArray.push({\r\n          title: snapshot.key!,\r\n          date: new Date(snapshot.val().date),\r\n          ratings: ratingsArray(snapshot.child('/ratings')),\r\n          id: snapshot.val().id,\r\n          cage: snapshot.val().cage\r\n        });\r\n      });\r\n      setMovieArray(tempMovieArray);\r\n    };\r\n    getData();\r\n  }, []);\r\n  return (\r\n    <FirebaseContext.Provider value={movieArray}>\r\n      {children}\r\n    </FirebaseContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FirebaseProvider;\r\n","import { IMovieData } from '../types';\r\n\r\nexport const getMovie = async (id: string) : Promise<IMovieData> => {\r\n  const apiKey = process.env.REACT_APP_TMDB_KEY;\r\n  const getMovie = await fetch(\r\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`\r\n  );\r\n  const {\r\n    budget,\r\n    genres,\r\n    imdb_id,\r\n    overview,\r\n    poster_path,\r\n    backdrop_path,\r\n    revenue,\r\n    runtime,\r\n    title,\r\n    vote_average,\r\n    vote_count,\r\n    release_date,\r\n    tagline\r\n  } = await getMovie.json();\r\n  return {\r\n    budget,\r\n    genres,\r\n    imdb_id,\r\n    overview,\r\n    poster_path: `https://image.tmdb.org/t/p/w500${poster_path}`,\r\n    backdgrop_path:`https://image.tmdb.org/t/p/w1280${backdrop_path}`,\r\n    revenue,\r\n    runtime,\r\n    title,\r\n    vote_average,\r\n    vote_count,\r\n    tagline,\r\n    release_date: new Date(release_date)\r\n  };\r\n};\r\n","\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\n\r\nexport const getDate = (date:Date) =>{\r\n  return`${monthNames[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`\r\n}","import { format } from 'node:path';\r\nimport { getDate } from './getDate';\r\n\r\n\r\n\r\n\r\nconst formatTime = (time:number) =>{\r\n  const hours = Math.floor(time/60);\r\n  const minutes = (time % 60)\r\n  return `${hours}h ${minutes}m`\r\n}\r\n\r\n\r\nexport const infoString = (date:Date, genres:{name:string,id:number}[], runtime:number)=>{\r\n  const formatDate = getDate(date);\r\n  \r\n  let genreString = '';\r\n  genres.forEach((item,i)=>{\r\n    if(i === genres.length-1){\r\n      //last item\r\n      genreString += item.name\r\n    }\r\n    else{\r\n      genreString+= `${item.name}, `\r\n    }\r\n  })\r\n  return `${formatDate} | ${genreString} | ${formatTime(runtime)}`\r\n}","const bad = {\r\n  path:'#FF0800',\r\n  trail: '#420C09',\r\n  star:'#FF0800'\r\n}\r\nconst mediocre = {\r\n  path: '#FFD300',\r\n  trail: '#614710',\r\n  star: '#E56717'\r\n}\r\n const good = {\r\n   path:'#03AC13',\r\n   trail: '#003B00',\r\n   star: '#FFD700'\r\n }\r\n\r\n\r\nexport const circleColor = (rating: number) =>{\r\n  if(rating < 4){\r\n    return bad\r\n  }\r\n  if(rating >= 4 && rating < 6.9){\r\n    return mediocre\r\n  }\r\n  return good\r\n}","import React from 'react';\r\nimport {CircularProgressbar, buildStyles} from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { circleColor } from '../util/circleColor';\r\n\r\ninterface Props {\r\n  rating: number;\r\n}\r\n\r\n\r\n\r\nconst RatingCircle = ({rating}: Props) => {\r\n  const style = circleColor(rating)\r\n  return (\r\n    <div>\r\n      <CircularProgressbar\r\n        value={rating}\r\n        text={`${rating.toFixed(1)}`}\r\n        maxValue={10}\r\n        strokeWidth = {12}\r\n        styles = {buildStyles({\r\n          pathColor: style.path,\r\n          trailColor: style.trail,\r\n          textColor: 'white',\r\n          \r\n        })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RatingCircle;\r\n","import { IRating } from '../types';\r\n\r\nexport const averageRating = (ratings: IRating[]) => {\r\n  let total = 0;\r\n  ratings.forEach((rating)=>{\r\n    total += rating.score;\r\n  })\r\n  return total/ratings.length\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport {IMovie, IMovieData, IRating} from '../types';\r\nimport {getMovie} from '../util/getMovie';\r\nimport '../styles/moviePage.css';\r\nimport {infoString} from '../util/infoString';\r\nimport RatingCircle from './ratingCircle';\r\nimport {averageRating} from '../util/averageRating';\r\nimport {Table} from 'react-bootstrap';\r\nimport {sortRatings} from '../util/sortRatings';\r\nimport {getDate} from '../util/getDate';\r\nimport {useMediaQuery} from 'react-responsive';\r\nimport {ImCross, ImCheckmark} from 'react-icons/im';\r\nimport '../styles/movieDetails.css'\r\n\r\ninterface Props {\r\n  date: Date;\r\n  ratings: IRating[];\r\n  vote_average: number;\r\n  vote_count: number;\r\n  overview: string;\r\n  budget: number;\r\n  revenue: number;\r\n  cage: boolean;\r\n}\r\n\r\nconst MovieDetails = ({\r\n  date,\r\n  ratings,\r\n  vote_average,\r\n  vote_count,\r\n  overview,\r\n  budget,\r\n  revenue,\r\n  cage,\r\n}: Props) => {\r\n  return (\r\n    <div className=\"detailsPage\">\r\n      <div className=\"movieRatings\">\r\n        <div className=\"ourRating\">\r\n          <div>Our Rating ({ratings.length})</div>\r\n          <div className=\"ratingSize\">\r\n            <RatingCircle rating={averageRating(ratings)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"fanRating\">\r\n          <div>TMDB Rating ({vote_count.toLocaleString('en')})</div>\r\n          <div className=\"ratingSize\">\r\n            <RatingCircle rating={vote_average} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"movieDetails\">\r\n        <div className=\"cage\">\r\n          <div className=\"heading\">Nic Cage</div>\r\n          <div className=\" = detailBody\">\r\n            {cage ? (\r\n              <ImCheckmark size={20} color=\"#03AC13\" />\r\n            ) : (\r\n              <ImCross size={20} color=\"#FF0800\" />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"overview\">\r\n          <div className=\"heading\">Plot</div>\r\n          <div className=\" = detailBody\">{overview}</div>\r\n        </div>\r\n        <div className=\"budget\">\r\n          <div className=\"heading\">Budget</div>\r\n          <div className=\" = detailBody\">${budget.toLocaleString('en')}</div>\r\n        </div>\r\n        <div className=\"revenue\">\r\n          <div className=\"heading\">Revenue</div>\r\n          <div className=\" = detailBody\">${revenue.toLocaleString('en')}</div>\r\n        </div>\r\n        <div className=\"revenue\">\r\n          <div className=\"heading\">Date Watched</div>\r\n          <div className=\" = detailBody\">{getDate(date)}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import React, { useState } from 'react';\r\nimport {Table} from 'react-bootstrap'\r\nimport StarRatings from 'react-star-ratings';\r\nimport { IRating } from '../types';\r\nimport { sortRatings } from '../util/sortRatings';\r\nimport '../styles/ratingsTable.css'\r\n\r\n\r\ninterface IProps {\r\n  ratings: IRating[];\r\n  isMobile: boolean;\r\n  title: string;\r\n}\r\n\r\nconst RatingTable = ({ratings, isMobile, title}:IProps) => {\r\n  const [sortBest, setSortBest] = useState<boolean>(true);\r\n  const [sortType, setSortType] = useState<'name' | 'score'>('score');\r\n  const changeSort = (type: 'name' | 'score') => {\r\n    if (type === sortType) {\r\n      setSortBest(!sortBest);\r\n    } else {\r\n      setSortType(type);\r\n    }\r\n  };\r\n  return (\r\n    <div className = 'ratingTable'>\r\n      <div className = 'ratingTitle'>{title}</div>\r\n    <Table size=\"sm\" hover variant=\"dark\" className=\"tableOfRatings\">\r\n      <tbody>\r\n        <tr>\r\n          <th onClick={() => changeSort('name')}>Name</th>\r\n          <th onClick={() => changeSort('score')}>Score</th>\r\n        </tr>\r\n        {ratings\r\n          .sort((a, b) => sortRatings(a, b, sortType, sortBest))\r\n          .map((rating, i) => (\r\n            <tr key={i}>\r\n              <td>{rating.name}</td>\r\n              <td>\r\n                <StarRatings\r\n                  rating={rating.score / 2}\r\n                  starRatedColor=\"rgb(255,223,0)\"\r\n                  starEmptyColor=\"rgb(30,30,30)\"\r\n                  starDimension={!isMobile ? '35px' : '30px'}\r\n                  starSpacing={!isMobile ? '2px' : '0px'}\r\n                />\r\n                {` ${rating.score.toFixed(1)}/10`}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n    </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RatingTable;\r\n","import { IRating } from '../types';\r\n\r\nexport const sortRatings = (a: IRating, b: IRating, sortType: 'name'|'score', sortBest: boolean) => {\r\n  if (sortType === 'score') {\r\n    if (sortBest) {\r\n      return b.score - a.score;\r\n    }\r\n    return a.score - b.score;\r\n  } else {\r\n    if (sortBest) {\r\n      if (a.name > b.name) {\r\n        return 1;\r\n      } else if (a.name < b.name) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n    else{\r\n      if (a.name > b.name) {\r\n        return -1;\r\n      } else if (a.name < b.name) {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n  }\r\n};","import React, {useEffect, useState} from 'react';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport {IMovie, IMovieData, IRating} from '../types';\r\nimport {getMovie} from '../util/getMovie';\r\nimport '../styles/moviePage.css';\r\nimport {infoString} from '../util/infoString';\r\nimport RatingCircle from './ratingCircle';\r\nimport {averageRating} from '../util/averageRating';\r\nimport {Table} from 'react-bootstrap';\r\nimport {sortRatings} from '../util/sortRatings';\r\nimport {getDate} from '../util/getDate';\r\nimport StarRatings from 'react-star-ratings';\r\nimport MovieDetails from './movieDetails';\r\nimport {useMediaQuery} from 'react-responsive';\r\nimport RatingTable from './ratingTable';\r\n\r\n\r\ninterface Props {\r\n  title: string;\r\n  id: string;\r\n  date: Date;\r\n  ratings: IRating[];\r\n  cage: boolean\r\n}\r\n\r\nconst Movie = ({title, id, date, ratings, cage}: Props) => {\r\n  const [movieData, setMovieData] = useState<IMovieData>();\r\n  \r\n  const isMobile = useMediaQuery({maxWidth: 700});\r\n  useEffect(() => {\r\n    const getMovieData = async () => {\r\n      const movie = await getMovie(id);\r\n      setMovieData(movie);\r\n    };\r\n    getMovieData();\r\n  }, []);\r\n  \r\n\r\n  if (movieData) {\r\n    const details = (\r\n      <MovieDetails\r\n        date={date}\r\n        ratings={ratings}\r\n        vote_average={movieData.vote_average}\r\n        vote_count={movieData.vote_count}\r\n        overview={movieData.overview}\r\n        budget={movieData.budget}\r\n        revenue={movieData.revenue}\r\n        cage = {cage}\r\n      />\r\n    );\r\n    return (\r\n      <div className=\"moviePage\">\r\n        <div\r\n          className=\"info\"\r\n          style={{backgroundImage: `url(${movieData.backdgrop_path})`}}\r\n        >\r\n          <div className=\"overlay\"></div>\r\n          <div className=\"moviePoster\">\r\n            <img src={movieData.poster_path} />\r\n          </div>\r\n          <div className=\"movieInfo\">\r\n            <div className=\"titleDiv\">\r\n              <div className=\"movieTitle\">{`${title} (${movieData.release_date.getFullYear()})`}\r\n              <div className=\"movieTitleInfo\">\r\n                {movieData &&\r\n                  infoString(\r\n                    movieData.release_date,\r\n                    movieData.genres,\r\n                    movieData.runtime\r\n                  )}\r\n              </div>\r\n              </div>\r\n             \r\n              <div className=\"tagline\">{movieData.tagline}</div>\r\n            </div>\r\n            {!isMobile && details}\r\n          </div>\r\n        </div>\r\n        {isMobile && details}\r\n        <RatingTable title = 'Ratings' ratings = {ratings} isMobile ={isMobile} />\r\n        </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"moviePage\">\r\n      <div className=\"info\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\">\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Navbar.Brand href=\"/\">Movie Ratings</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#/viewers\">Viewers</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {IMovie, IMovieData} from '../types';\r\nimport {Card, Button} from 'react-bootstrap';\r\nimport {getMovie} from '../util/getMovie';\r\nimport RatingCircle from './ratingCircle';\r\nimport {averageRating} from '../util/averageRating';\r\nimport {Link} from 'react-router-dom';\r\nimport StarRatings from 'react-star-ratings';\r\nimport {ratingsArray} from '../util/ratingsArray';\r\nimport {circleColor} from '../util/circleColor';\r\nimport '../styles/movieCard.css'\r\n\r\ninterface Props extends IMovie {}\r\n\r\nconst MovieCard = ({title, id, date, ratings}: Props) => {\r\n  const [movieData, setMovieData] = useState<IMovieData>();\r\n  useEffect(() => {\r\n    const getMovieData = async () => {\r\n      const movie = await getMovie(id);\r\n      setMovieData(movie);\r\n    };\r\n    getMovieData();\r\n  }, []);\r\n  const averageScore = averageRating(ratings);\r\n  return (\r\n    <Card bg=\"dark\" className=\"movieCard\">\r\n      <div className=\"imageWrapper\">\r\n        <div className=\"image\">\r\n          <img className=\"cardImage\" src={movieData?.poster_path} />\r\n        </div>\r\n      </div>\r\n      <div className=\"bodyWrapper\">\r\n        <div className=\"body\">\r\n          <div className=\"title\">\r\n            <Link to={`/movies/${title.replace(/ /g, '-')}`}>\r\n              <Card.Title>{movieData?.title}</Card.Title>\r\n            </Link>\r\n          </div>\r\n          <div className=\"averageRating\">\r\n            <div className=\"stars\">\r\n              <StarRatings\r\n                rating={averageScore / 10}\r\n                starRatedColor=\"rgb(255,223,0)\"\r\n                numberOfStars={1}\r\n                starEmptyColor={'rgb(30,30,30)'}\r\n                starDimension=\"50px\"\r\n                starSpacing=\"0px\"\r\n              />\r\n            </div>\r\n            <div className=\"score\">{averageScore.toFixed(1)}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport {FirebaseContext} from '../firebase/provider';\r\nimport {IRating, IViewer} from '../types';\r\nimport {ratingsArray} from '../util/ratingsArray';\r\nimport MovieCard from './movieCard';\r\nimport Select, {OptionTypeBase} from 'react-select';\r\nimport {sortMovies} from '../util/sortMovies';\r\nimport Switch from 'react-switch';\r\n\r\nconst options = [\r\n  {value: 'dateA', label: 'Date (Ascending)'},\r\n  {value: 'dateD', label: 'Date (Descending)'},\r\n  {value: 'rateA', label: 'Rating (Ascending)'},\r\n  {value: 'rateD', label: 'Rating (Descending)'},\r\n  {value: 'titleA', label: 'Title (Ascending)'},\r\n  {value: 'titleD', label: 'Title(Descending)'},\r\n];\r\n\r\nconst Home = () => {\r\n  const [sortType, setSortType] = useState<OptionTypeBase>(options[1]);\r\n  const [cageFilter, setCageFilter] = useState<boolean>(false)\r\n  const movies = useContext(FirebaseContext).slice().sort((a, b) =>\r\n    sortMovies(a, b, sortType)\r\n  );\r\n  return (\r\n    <div className=\"homePage\">\r\n      <div className=\"sort\">\r\n        <div className = 'cageFilter'>\r\n          <div className = 'filterTitle'>Cage Filter</div>\r\n          <Switch onColor = '#03AC13' uncheckedIcon = {false} checked = {cageFilter} onChange = {(checked)=>setCageFilter(checked)}/>\r\n          </div>\r\n        <Select\r\n          isSearchable={false}\r\n          className=\"select\"\r\n          options={options}\r\n          value={sortType}\r\n          onChange={setSortType}\r\n        />\r\n      </div>\r\n      <div className=\"home\">\r\n        {movies.filter((x)=>cageFilter ? x.cage === true : x).map((movie, i) => (\r\n          <MovieCard\r\n            key={movie.id}\r\n            title={movie.title}\r\n            date={movie.date}\r\n            id={movie.id}\r\n            ratings={movie.ratings}\r\n            cage = {movie.cage}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import {IMovie, IViewer} from '../types';\r\nimport {OptionTypeBase} from 'react-select';\r\nimport {averageRating} from './averageRating';\r\n\r\nexport const sortMovies = (\r\n  a: IMovie,\r\n  b: IMovie,\r\n  sort: OptionTypeBase\r\n): number => {\r\n  switch (sort.value) {\r\n    case 'dateA':\r\n      return a.date.getTime() - b.date.getTime();\r\n    case 'dateD':\r\n      return b.date.getTime() - a.date.getTime();\r\n    case 'rateA':\r\n      return averageRating(a.ratings) - averageRating(b.ratings);\r\n    case 'rateD':\r\n      return averageRating(b.ratings) - averageRating(a.ratings);\r\n    case 'titleA':\r\n      if (a.title > b.title) {\r\n        return 1;\r\n      } else if (a.title < b.title) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    case 'titleD':\r\n      if (a.title > b.title) {\r\n        return -1;\r\n      } else if (a.title < b.title) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    default:\r\n      return b.date.getTime() - a.date.getTime();\r\n  }\r\n  return -1;\r\n};\r\n// exact same thing but with Viewers\r\nexport const sortViewers = (\r\n  a: IViewer,\r\n  b: IViewer,\r\n  sort: OptionTypeBase\r\n): number => {\r\n  switch (sort.value) {\r\n    case 'rateA':\r\n      return averageRating(a.ratings) - averageRating(b.ratings);\r\n    case 'rateD':\r\n      return averageRating(b.ratings) - averageRating(a.ratings);\r\n    case 'titleA':\r\n      if (a.name > b.name) {\r\n        return 1;\r\n      } else if (a.name < b.name) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    case 'titleD':\r\n      if (a.name > b.name) {\r\n        return -1;\r\n      } else if (a.name < b.name) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    default:\r\n      if (a.name > b.name) {\r\n        return 1;\r\n      } else if (a.name < b.name) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport {IRating, IViewer} from '../types';\r\nimport '../styles/App.css';\r\nimport {Card} from 'react-bootstrap';\r\nimport '../styles/viewerCard.css';\r\nimport {averageRating} from '../util/averageRating';\r\nimport {getTrailingCommentRanges} from 'typescript';\r\nimport {useMediaQuery} from 'react-responsive';\r\nimport StarRatings from 'react-star-ratings';\r\nimport {Link } from 'react-router-dom'\r\ninterface IProps {\r\n  ratings: IRating[];\r\n  name: string;\r\n}\r\n\r\nconst ViewerCard = ({ratings, name}: IProps) => {\r\n  const isMobile = useMediaQuery({maxWidth: 700});\r\n  const highestRated = ratings.sort((a, b) => b.score - a.score)[0];\r\n  const lowestRated = ratings.sort((a, b) => a.score - b.score)[0];\r\n  return (\r\n    <Card bg=\"dark\" className=\"viewerCard\">\r\n      <Card.Header className=\"viewerCardHeader\"><Link to={`/viewers/${name}`}>{name}</Link></Card.Header>\r\n      <Card.Body className=\"viewerCardBody\">\r\n        <table className=\"viewerCardTable\">\r\n          <tbody>\r\n            <tr>\r\n              <th>Movies Watched:</th>\r\n              <td>{ratings.length}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Average Rating:</th>\r\n              <td className = 'avgRating'>\r\n              \r\n                <StarRatings\r\n                  rating={averageRating(ratings) / 2}\r\n                  starRatedColor=\"rgb(255,223,0)\"\r\n                  starEmptyColor=\"rgb(30,30,30)\"\r\n                  starDimension={!isMobile ? '22px' : '15px'}\r\n                  starSpacing={!isMobile ? '0px' : '0px'}\r\n                />\r\n                 <div id = 'ratingNumber'>{` ${averageRating(ratings).toFixed(1)}/10`}</div>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th>Highest Rated:</th>\r\n              <td>\r\n                {highestRated.name} ({highestRated.score}/10)\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Lowest Rated:</th>\r\n              <td>\r\n                {lowestRated.name} ({lowestRated.score}/10)\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ViewerCard;\r\n","import React, {useState} from 'react';\r\nimport {IViewer} from '../types';\r\nimport ViewerCard from './viewerCard';\r\nimport Select, {OptionTypeBase} from 'react-select';\r\nimport { sortMovies, sortViewers } from '../util/sortMovies';\r\n\r\ninterface IProps {\r\n  viewerData: IViewer[];\r\n}\r\nconst options = [\r\n  {value: 'rateA', label: 'Rating (Ascending)'},\r\n  {value: 'rateD', label: 'Rating (Descending)'},\r\n  {value: 'titleA', label: 'Name (Ascending)'},\r\n  {value: 'titleD', label: 'Name (Descending)'},\r\n];\r\n\r\nconst ViewerHome = ({viewerData}: IProps) => {\r\n  const [sortType, setSortType] = useState<OptionTypeBase>(options[2]);\r\n\r\n  return (\r\n    <div className=\"viewerHomePage\">\r\n      <div className=\"viewerSort\">\r\n        <Select\r\n          isSearchable={false}\r\n          className=\"select\"\r\n          options={options}\r\n          value={sortType}\r\n          onChange={setSortType}\r\n        />\r\n      </div>\r\n      <div className=\"viewerHome\">\r\n        {viewerData.sort((a,b)=>sortViewers(a,b,sortType)).map((viewer, i) => (\r\n          <ViewerCard key={i} ratings={viewer.ratings} name={viewer.name} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewerHome;\r\n","import React from 'react';\r\nimport {IRating} from '../types';\r\nimport RatingTable from './ratingTable';\r\nimport {useMediaQuery} from 'react-responsive'\r\n\r\ninterface IProps {\r\n  ratings: IRating[];\r\n  name: string;\r\n}\r\n\r\nconst ViewerPage = ({ratings, name}: IProps) => {\r\n  const isMobile = useMediaQuery({maxWidth:700})\r\n  return (\r\n    <div>\r\n      <RatingTable title = {`${name}'s Ratings`} ratings={ratings} isMobile={isMobile} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewerPage;\r\n","export default __webpack_public_path__ + \"static/media/tmdb.bb8aa703.svg\";","import React from 'react';\r\nimport tmdb from '../images/tmdb.svg'\r\n\r\n\r\nconst Footer = () =>{\r\n  return(\r\n    <div className = 'footer'>\r\n      <div>Movie images and info powered by:</div>\r\n      <a href = 'https://www.themoviedb.org/'>\r\n      <img src = {tmdb} />\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Footer;","import React, {useContext, useEffect, useState} from 'react';\nimport {FirebaseContext} from './firebase/provider';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Movie from './components/movie';\nimport Viewer from './components/viewerCard';\nimport NavBar from './components/navBar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {ratingsArray} from './util/ratingsArray';\nimport Home from './components/home';\nimport {IMovie, IRating, IViewer} from './types';\nimport {getMovie} from './util/getMovie';\nimport ViewerHome from './components/viewerHome';\nimport ViewerPage from './components/viewerPage';\nimport Footer from './components/footer';\n\nconst App = () => {\n  const movies = useContext(FirebaseContext);\n  const [viewerData, setViewerData] = useState<IViewer[]>([]);\n  useEffect(() => {\n    const getViewerData = () => {\n      let viewerArray: IViewer[] = [];\n      movies.forEach((movie) => {\n        movie.ratings.forEach((rating) => {\n          const index = viewerArray.findIndex((x) => x.name === rating.name);\n          if (index === -1) {\n            //not in the array, add the name\n            viewerArray.push({\n              name: rating.name,\n              ratings: [{name: movie.title, score: rating.score}],\n            });\n          } else {\n            //name is already in the array\n            viewerArray[index].ratings.push({\n              name: movie.title,\n              score: rating.score,\n            });\n          }\n        });\n      });\n      setViewerData(viewerArray);\n    };\n    getViewerData();\n  }, [movies]);\n  return (\n    <div>\n      <NavBar />\n      <div className=\"appBody\">\n        <Router>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          {movies.map((movie, i) => (\n            <Route path={`/movies/${movie.title.replace(/ /g, '-')}`} key={i}>\n              <Movie\n                title={movie.title}\n                ratings={movie.ratings}\n                id={movie.id}\n                date={movie.date}\n                cage = {movie.cage}\n              />\n            </Route>\n          ))}\n          <Route exact path=\"/viewers\">\n            <ViewerHome viewerData={viewerData} />\n          </Route>\n          {viewerData.map((viewer) => (\n            <Route path={`/viewers/${viewer.name}`}>\n              <ViewerPage name={viewer.name} ratings={viewer.ratings} />\n            </Route>\n          ))}\n        </Router>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport firebase from 'firebase/app'\nimport 'firebase/database';\nimport './styles/App.css';\nimport FirebaseContext from './firebase/provider'\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseContext>\n      <App />\n    </FirebaseContext>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}