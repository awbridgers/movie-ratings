{"version":3,"sources":["firebase/config.ts","util/ratingsArray.ts","firebase/authProvider.tsx","firebase/provider.tsx","util/getMovie.ts","util/getDate.ts","util/infoString.ts","util/circleColor.ts","components/ratingCircle.tsx","util/averageRating.ts","components/movieDetails.tsx","components/ratingTable.tsx","util/sortRatings.ts","components/addRating.tsx","pages/movie.tsx","components/navBar.tsx","components/movieCard.tsx","pages/home.tsx","util/sortMovies.ts","components/viewerCard.tsx","pages/viewerHome.tsx","pages/viewerPage.tsx","images/tmdb.svg","components/footer.tsx","components/scrollToTop.tsx","components/logIn.tsx","pages/SignUp.tsx","components/protectedRoute.tsx","components/changeProfileInfo.tsx","pages/profile.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","apps","length","initializeApp","apiKey","process","authDomain","databaseURL","messagingSenderId","projectId","storageBucket","db","database","auth","ratingsArray","ratings","movie","forEach","snapshot","push","name","val","displayName","key","score","id","replace","AuthContext","createContext","AuthProvider","children","useState","user","setUser","useEffect","onAuthStateChanged","Provider","value","FirebaseContext","viewer","userMovie","FirebaseProvider","movieArray","setMovieArray","viewerArray","setViewerArray","userArray","setUserArray","setDisplayName","useContext","ref","uid","on","child","off","getMovieData","a","tempMovieArray","once","title","date","Date","cage","console","log","message","getViewerData","tempViewerArray","getMovie","fetch","json","budget","genres","imdb_id","overview","poster_path","backdrop_path","revenue","runtime","vote_average","vote_count","release_date","tagline","monthNames","getDate","getMonth","getFullYear","infoString","formatDate","genreString","item","i","time","hours","Math","floor","minutes","formatTime","bad","path","trail","star","mediocre","good","RatingCircle","rating","style","circleColor","text","toFixed","maxValue","strokeWidth","styles","buildStyles","pathColor","trailColor","textColor","averageRating","total","MovieDetails","addRating","userRating","deleteRating","className","toLocaleString","size","color","data-testid","onClick","display","Button","variant","RatingTable","isMobile","sortBest","setSortBest","sortType","setSortType","history","useHistory","changeSort","type","Table","hover","sort","b","sortRatings","map","starRatedColor","starEmptyColor","starDimension","starSpacing","AddRating","back","userScore","newRating","setNewRating","error","setError","success","setSuccess","Alert","Heading","marginBottom","Form","onSubmit","e","preventDefault","ratingNumber","parseFloat","isNaN","updates","round","update","then","catch","Group","as","Row","controlId","Label","column","Col","xs","Control","plaintext","readOnly","defaultValue","placeholder","onChange","target","isInvalid","Feedback","deletes","Movie","movieData","setMovieData","setAddRating","setDeleteRating","useMediaQuery","maxWidth","find","x","details","backgroundImage","src","alt","NavBar","signIn","signOut","expanded","setExpanded","pathname","useLocation","Navbar","bg","expand","onToggle","Toggle","aria-controls","Collapse","Nav","Link","to","NavDropdown","alignRight","Item","MovieCard","mounted","averageScore","Card","Title","numberOfStars","options","label","Home","cageFilter","setCageFilter","movies","slice","getTime","sortMovies","onColor","uncheckedIcon","checked","htmlFor","isSearchable","inputId","filter","ViewerCard","highestRated","reduce","accumulator","current","lowestRated","Header","Body","ViewerHome","viewers","sortViewers","ViewerPage","Footer","href","tmdb","ScrollToTop","window","scrollTo","LogIn","email","setEmail","password","setPassword","signInWithEmailAndPassword","SignUp","confirmPassword","setConfirmPassword","errors","setErrors","accountCreated","setAccountCreated","alreadySignedIn","setAlreadySignedIn","FormControl","formHasErrors","prev","test","createUserWithEmailAndPassword","newUser","updateProfile","set","toLowerCase","includes","ProtectedRoute","rest","authenticated","render","ChangeProfileInfo","currentEmail","currentName","currentPassword","setCurrentPassword","setName","deleteText","setDeleteText","userMovies","handleSubmit","cred","EmailAuthProvider","credential","reauthenticateWithCredential","userCredential","updateEmail","updatePassword","reCred","deleteDB","delete","Text","disabled","Profile","showChange","setShowChange","App","login","setLogin","logOut","setLogOut","position","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.470af176.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET\r\n}\r\n\r\nif(!firebase.apps.length){\r\n  firebase.initializeApp(config);\r\n}\r\n\r\nexport const db = firebase.database();\r\nexport const auth = firebase.auth();","import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport {IRating} from '../types';\r\n\r\nexport const ratingsArray = (\r\n  ratings: firebase.database.DataSnapshot,\r\n  movie: boolean\r\n): IRating[] => {\r\n  let ratingsArray: IRating[] = [];\r\n  ratings.forEach((snapshot) => {\r\n    ratingsArray.push({\r\n      name: movie ? snapshot.val().displayName : snapshot.key!,\r\n      score: movie ? snapshot.val().score : snapshot.val(),\r\n      id: movie ? snapshot.key! : snapshot.key!.replace(/ /g, '-')\r\n    });\r\n  });\r\n  return ratingsArray;\r\n};\r\n","import React, {useState, createContext, useEffect} from 'react';\r\nimport {auth} from './config';\r\nimport firebase from 'firebase/app';\r\n\r\ninterface IProvider {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const AuthContext = createContext<firebase.User | null>(null);\r\n\r\n\r\nconst AuthProvider = ({children}: IProvider) =>{\r\n  const [user, setUser] = useState<firebase.User | null>(null)\r\n  useEffect(()=>{\r\n    return auth.onAuthStateChanged((user)=>setUser(user))\r\n  },[])\r\n  return (\r\n    <AuthContext.Provider value = {user}>{children}</AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AuthProvider","import {db} from './config';\r\nimport {createContext, useContext, useEffect, useState} from 'react';\r\nimport React from 'react';\r\nimport {ratingsArray} from '../util/ratingsArray';\r\nimport {IMovie, IRating, IViewer, MovieContext} from '../types';\r\nimport {AuthContext} from './authProvider';\r\n\r\ninterface IProvider {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const FirebaseContext = createContext<MovieContext>({movie: [], viewer: [], userMovie: [], displayName: null});\r\n\r\nconst FirebaseProvider = ({children}: IProvider) => {\r\n  const [movieArray, setMovieArray] = useState<IMovie[]>([]);\r\n  const [viewerArray, setViewerArray] = useState<IViewer[]>([]);\r\n  const [userArray, setUserArray] = useState<IRating[]>([]);\r\n  const [displayName, setDisplayName] = useState<string>('');\r\n  const user = useContext(AuthContext);\r\n  useEffect(() => {\r\n    //if a user is logged in, watch for changes to their db\r\n    if (user) {\r\n      db.ref(`users/${user.uid}`).on('value', (snapshot) => {\r\n        if(!snapshot.val()){\r\n          setUserArray([]);\r\n          setDisplayName('');\r\n        }\r\n        else{\r\n        setUserArray(ratingsArray(snapshot.child('/ratings'), false));\r\n        setDisplayName(snapshot.val().displayName);\r\n        }\r\n      });\r\n\r\n      return () => db.ref(`users/${user.uid}`).off();\r\n    }\r\n  }, [user]);\r\n  useEffect(() => {\r\n    //load the data initially\r\n    const getMovieData = async () => {\r\n      let tempMovieArray: IMovie[] = [];\r\n      try {\r\n        const movies = await db.ref('movies').once('value');\r\n        movies.forEach((snapshot) => {\r\n          tempMovieArray.push({\r\n            title: snapshot.key!,\r\n            date: new Date(snapshot.val().date),\r\n            ratings: ratingsArray(snapshot.child('/ratings'), true),\r\n            id: snapshot.val().id,\r\n            cage: snapshot.val().cage,\r\n          });\r\n        });\r\n        setMovieArray(tempMovieArray);\r\n      } catch (e) {\r\n        console.log(e.message);\r\n      }\r\n    };\r\n    const getViewerData = async () => {\r\n      try {\r\n        let tempViewerArray: IViewer[] = [];\r\n        const viewers = await db.ref('users').once('value');\r\n        viewers.forEach((snapshot) => {\r\n          if (snapshot.val().ratings) {\r\n            tempViewerArray.push({\r\n              name: snapshot.val().displayName,\r\n              ratings: ratingsArray(snapshot.child('/ratings'), false),\r\n              id: snapshot.key!,\r\n            });\r\n          }\r\n        });\r\n        setViewerArray(tempViewerArray);\r\n      } catch (e) {\r\n        console.log(e.message);\r\n      }\r\n    };\r\n    getMovieData();\r\n    getViewerData();\r\n  }, [userArray, displayName]);\r\n  return (\r\n    <FirebaseContext.Provider\r\n      value={{\r\n        movie: movieArray,\r\n        viewer: viewerArray,\r\n        userMovie: userArray,\r\n        displayName: displayName,\r\n      }}\r\n    >\r\n      {children}\r\n    </FirebaseContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FirebaseProvider;\r\n","import { IMovieData } from '../types';\r\n\r\nexport const getMovie = async (id: string) : Promise<IMovieData> => {\r\n  const apiKey = process.env.REACT_APP_TMDB_KEY;\r\n  const getMovie = await fetch(\r\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`\r\n  );\r\n  const {\r\n    budget,\r\n    genres,\r\n    imdb_id,\r\n    overview,\r\n    poster_path,\r\n    backdrop_path,\r\n    revenue,\r\n    runtime,\r\n    title,\r\n    vote_average,\r\n    vote_count,\r\n    release_date,\r\n    tagline\r\n  } = await getMovie.json();\r\n  return {\r\n    budget,\r\n    genres,\r\n    imdb_id,\r\n    overview,\r\n    poster_path: `https://image.tmdb.org/t/p/w500${poster_path}`,\r\n    backdrop_path:`https://image.tmdb.org/t/p/w1280${backdrop_path}`,\r\n    revenue,\r\n    runtime,\r\n    title,\r\n    vote_average,\r\n    vote_count,\r\n    tagline,\r\n    release_date: new Date(release_date)\r\n  };\r\n};\r\n","\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\n\r\nexport const getDate = (date:Date) =>{\r\n  return`${monthNames[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`\r\n}","import { getDate } from './getDate';\r\n\r\n\r\n\r\n\r\nconst formatTime = (time:number) =>{\r\n  const hours = Math.floor(time/60);\r\n  const minutes = (time % 60)\r\n  return `${hours}h ${minutes}m`\r\n}\r\n\r\n\r\nexport const infoString = (date:Date, genres:{name:string,id:number}[], runtime:number)=>{\r\n  const formatDate = getDate(date);\r\n  \r\n  let genreString = '';\r\n  genres.forEach((item,i)=>{\r\n    if(i === genres.length-1){\r\n      //last item\r\n      genreString += item.name\r\n    }\r\n    else{\r\n      genreString+= `${item.name}, `\r\n    }\r\n  })\r\n  return `${formatDate} | ${genreString} | ${formatTime(runtime)}`\r\n}","const bad = {\r\n  path:'#FF0800',\r\n  trail: '#420C09',\r\n  star:'#FF0800'\r\n}\r\nconst mediocre = {\r\n  path: '#FFD300',\r\n  trail: '#614710',\r\n  star: '#E56717'\r\n}\r\n const good = {\r\n   path:'#03AC13',\r\n   trail: '#003B00',\r\n   star: '#FFD700'\r\n }\r\n\r\n\r\nexport const circleColor = (rating: number) =>{\r\n  if(rating < 4){\r\n    return bad\r\n  }\r\n  if(rating >= 4 && rating < 6.9){\r\n    return mediocre\r\n  }\r\n  return good\r\n}","import React from 'react';\r\nimport {CircularProgressbar, buildStyles} from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { circleColor } from '../util/circleColor';\r\n\r\ninterface Props {\r\n  rating: number;\r\n}\r\n\r\n\r\n\r\nconst RatingCircle = ({rating}: Props) => {\r\n  const style = circleColor(rating)\r\n  return (\r\n    <div>\r\n      <CircularProgressbar\r\n        value={rating}\r\n        text={`${rating.toFixed(1)}`}\r\n        maxValue={10}\r\n        strokeWidth = {12}\r\n        styles = {buildStyles({\r\n          pathColor: style.path,\r\n          trailColor: style.trail,\r\n          textColor: 'white',\r\n          \r\n        })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RatingCircle;\r\n","import { IRating } from '../types';\r\n\r\nexport const averageRating = (ratings: IRating[]) => {\r\n  let total = 0;\r\n  ratings.forEach((rating)=>{\r\n    total += rating.score;\r\n  })\r\n  return ratings.length !== 0 ? total/ratings.length : 0;\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {IRating} from '../types';\r\nimport '../styles/moviePage.css';\r\nimport RatingCircle from './ratingCircle';\r\nimport {averageRating} from '../util/averageRating';\r\nimport {getDate} from '../util/getDate';\r\nimport {ImCross, ImCheckmark} from 'react-icons/im';\r\nimport '../styles/movieDetails.css';\r\nimport {Button} from 'react-bootstrap';\r\nimport {AuthContext} from '../firebase/authProvider';\r\n\r\ninterface Props {\r\n  date: Date;\r\n  ratings: IRating[];\r\n  vote_average: number;\r\n  vote_count: number;\r\n  overview: string;\r\n  budget: number;\r\n  revenue: number;\r\n  cage: boolean;\r\n  addRating: () => void;\r\n  deleteRating:()=>void;\r\n  userRating: IRating | undefined;\r\n}\r\n\r\nconst MovieDetails = ({\r\n  date,\r\n  ratings,\r\n  vote_average,\r\n  vote_count,\r\n  overview,\r\n  budget,\r\n  revenue,\r\n  cage,\r\n  addRating,\r\n  userRating,\r\n  deleteRating\r\n}: Props) => {\r\n  const user = useContext(AuthContext);\r\n  return (\r\n    <div className=\"detailsPage\">\r\n      <div className=\"movieRatings\">\r\n        <div className=\"ourRating\">\r\n          <div>Our Rating ({ratings.length})</div>\r\n          <div className=\"ratingSize\">\r\n            <RatingCircle rating={averageRating(ratings)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"fanRating\">\r\n          <div>TMDB Rating ({vote_count.toLocaleString('en')})</div>\r\n          <div className=\"ratingSize\">\r\n            <RatingCircle rating={vote_average} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"movieDetails\">\r\n        <div className=\"cage\">\r\n          <div className=\"heading\">Nic Cage</div>\r\n          <div className=\" = detailBody\">\r\n            {cage ? (\r\n              <ImCheckmark size={20} color=\"#03AC13\" data-testid=\"check\" />\r\n            ) : (\r\n              <ImCross size={20} color=\"#FF0800\" data-testid=\"x\" />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"overview\">\r\n          <div className=\"heading\">Plot</div>\r\n          <div className=\" = detailBody\">{overview}</div>\r\n        </div>\r\n        <div className=\"budget\">\r\n          <div className=\"heading\">Budget</div>\r\n          <div className=\" = detailBody\">${budget.toLocaleString('en')}</div>\r\n        </div>\r\n        <div className=\"revenue\">\r\n          <div className=\"heading\">Revenue</div>\r\n          <div className=\" = detailBody\">${revenue.toLocaleString('en')}</div>\r\n        </div>\r\n        <div className=\"revenue\">\r\n          <div className=\"heading\">Date Watched</div>\r\n          <div className=\" = detailBody\">{getDate(date)}</div>\r\n        </div>\r\n        {user && (\r\n          <div className=\"revenue\">\r\n            <div className=\"heading\">Your Rating</div>\r\n            {userRating ? (\r\n              <div className=\" = detailBody\">\r\n                {userRating.score}/10 |{' '}\r\n                <div\r\n                  className = 'changeRating'\r\n                  onClick={addRating}\r\n                >\r\n                  Change\r\n                </div>\r\n                <div style = {{display: 'inline'}} className = 'detailBody'> | </div>\r\n                <div className = 'changeRating' onClick = {deleteRating}>Delete</div>\r\n              </div>\r\n            ) : (\r\n              <Button size=\"sm\" variant=\"secondary\" onClick={addRating}>\r\n                Add Rating\r\n              </Button>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import React, {useState} from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport StarRatings from 'react-star-ratings';\r\nimport {IRating} from '../types';\r\nimport {sortRatings} from '../util/sortRatings';\r\nimport '../styles/ratingsTable.css';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { averageRating } from '../util/averageRating';\r\n\r\ninterface IProps {\r\n  ratings: IRating[];\r\n  isMobile: boolean;\r\n  title: string;\r\n  movie: boolean;\r\n}\r\n\r\nconst RatingTable = ({ratings, isMobile, title, movie}: IProps) => {\r\n  const [sortBest, setSortBest] = useState<boolean>(true);\r\n  const [sortType, setSortType] = useState<'name' | 'score'>('score');\r\n  const path = movie ? '/movies/' : '/viewers/';\r\n  const history = useHistory();\r\n  const changeSort = (type: 'name' | 'score') => {\r\n    if (type === sortType) {\r\n      setSortBest(!sortBest);\r\n    } else {\r\n      setSortType(type);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"ratingTable\">\r\n      <div className=\"ratingTitle\">{title}</div>\r\n      <Table size=\"sm\" hover variant=\"dark\" className=\"tableOfRatings\">\r\n        <tbody>\r\n          <tr>\r\n            <th onClick={() => changeSort('name')}>Name</th>\r\n            <th onClick={() => changeSort('score')}>Score</th>\r\n          </tr>\r\n          {ratings\r\n            .sort((a, b) => sortRatings(a, b, sortType, sortBest))\r\n            .map((rating, i) => (\r\n              <tr key={i}>\r\n                <td\r\n                  data-testid=\"ratingName\"\r\n                  className=\"ratingName\"\r\n                  onClick={() => history.push(`${path}${rating.id}`)}\r\n                >\r\n                  {rating.name}\r\n                </td>\r\n                <td>\r\n                  <StarRatings\r\n                    rating={rating.score / 2}\r\n                    starRatedColor=\"rgb(255,223,0)\"\r\n                    starEmptyColor=\"rgb(30,30,30)\"\r\n                    starDimension={!isMobile ? '35px' : '30px'}\r\n                    starSpacing={!isMobile ? '2px' : '0px'}\r\n                    name=\"starRating\"\r\n                  />\r\n                  {` ${rating.score.toFixed(1)}/10`}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n            <tr><td></td><td></td></tr>\r\n          <tr>\r\n            <td className=\"ratingsAverage\">Average ({ratings.length} ratings)</td>\r\n            <td>\r\n                  <StarRatings\r\n                    rating={averageRating(ratings) / 2}\r\n                    starRatedColor=\"rgb(255,223,0)\"\r\n                    starEmptyColor=\"rgb(30,30,30)\"\r\n                    starDimension={!isMobile ? '35px' : '30px'}\r\n                    starSpacing={!isMobile ? '2px' : '0px'}\r\n                    name=\"starRating\"\r\n                  />\r\n                  {` ${averageRating(ratings).toFixed(1)}/10`}\r\n                </td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RatingTable;\r\n","import { IRating } from '../types';\r\n\r\nexport const sortRatings = (a: IRating, b: IRating, sortType: 'name'|'score', sortBest: boolean) => {\r\n  if (sortType === 'score') {\r\n    if (sortBest) {\r\n      return b.score - a.score;\r\n    }\r\n    return a.score - b.score;\r\n  } else {\r\n    if (sortBest) {\r\n      if (a.name > b.name) {\r\n        return 1;\r\n      } else if (a.name < b.name) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n    else{\r\n      if (a.name > b.name) {\r\n        return -1;\r\n      } else if (a.name < b.name) {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n  }\r\n};","import React, {useContext, useState} from 'react';\r\nimport {Alert, Button, Col, Form, Row} from 'react-bootstrap';\r\nimport {db} from '../firebase/config';\r\nimport {AuthContext} from '../firebase/authProvider';\r\nimport '../styles/login.css';\r\nimport {IRating} from '../types';\r\nimport {FirebaseContext} from '../firebase/provider';\r\n\r\ninterface Props {\r\n  title: string;\r\n  back: () => void;\r\n  userScore: IRating | undefined;\r\n  deleteRating: boolean;\r\n}\r\n\r\nconst AddRating = ({title, back, userScore, deleteRating}: Props) => {\r\n  const [newRating, setNewRating] = useState<string>('');\r\n  const [error, setError] = useState<string>('');\r\n  const [success, setSuccess] = useState<boolean>(false);\r\n  const user = useContext(AuthContext)!;\r\n  const displayName = useContext(FirebaseContext).displayName!; //user must exist to access this page\r\n  const uid = user.uid;\r\n  const type = deleteRating ? 'Delete' : userScore ? 'Edit' : 'Add';\r\n \r\n  const submit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    //reset the error\r\n    setError('');\r\n    const ratingNumber = parseFloat(newRating);\r\n    if (!isNaN(ratingNumber) && ratingNumber >= 0 && ratingNumber <= 10) {\r\n      //add the rating to both the movie and the user\r\n      let updates: {[key: string]: any} = {};\r\n      updates[`movies/${title}/ratings/${uid}`] = {\r\n        displayName: displayName,\r\n        score: Math.round(ratingNumber * 10) / 10,\r\n      };\r\n      updates[`users/${uid}/ratings/${title}`] =\r\n        Math.round(ratingNumber * 10) / 10;\r\n      db.ref()\r\n        .update(updates)\r\n        .then(() => {\r\n          //display success message\r\n          setSuccess(true);\r\n        })\r\n        .catch((e) => setError(e.message));\r\n    } else {\r\n      setError('Please enter a number between 0-10.');\r\n    }\r\n  };\r\n  const remove = () =>{\r\n    let deletes:{[key:string]: any} = {};\r\n    deletes[`movies/${title}/ratings/${uid}`] = null;\r\n    deletes[`users/${uid}/ratings/${title}`] = null;\r\n    db.ref().update(deletes).then(()=>{\r\n      setSuccess(true)\r\n    }).catch((e)=>console.log(e.message));\r\n  }\r\n  if (success) {\r\n    return (\r\n      <div className=\"logIn\">\r\n        <Alert className=\"logOutBox\" variant=\"success\">\r\n          <Alert.Heading>Success!</Alert.Heading>\r\n          <p>Your rating has been {`${deleteRating ? 'deleted' : 'added'}`}!</p>\r\n          <Button variant=\"outline-success\" onClick={back}>\r\n            Close\r\n          </Button>\r\n        </Alert>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"logIn\" style={{color: 'white'}}>\r\n      <div className=\"logInBox\">\r\n        <div className=\"logInTitle\">\r\n          <h2>{type} Rating</h2>\r\n        </div>\r\n        <div style={{marginBottom: '15px'}}>\r\n          {!deleteRating && <>{type} your rating for <i>{title}</i> (0-10).</>}\r\n          {deleteRating && <>Are you sure you want to delete your rating for <i>{title}</i>?</>}\r\n        </div>\r\n        <Form onSubmit={submit}>\r\n          {userScore && (\r\n            <Form.Group as={Row} controlId=\"formCurrentScore\">\r\n              <Form.Label column>Current Rating:</Form.Label>\r\n              <Col xs={7}>\r\n                <Form.Control\r\n                  style={{color: 'white'}}\r\n                  plaintext\r\n                  readOnly\r\n                  defaultValue={`${userScore.score}/10`}\r\n                ></Form.Control>\r\n              </Col>\r\n            </Form.Group>\r\n          )}\r\n\r\n          {!deleteRating && (\r\n            <Form.Group as={Row} controlId=\"formrating\">\r\n              <Col xs={3}>\r\n                <Form.Label>Rating: </Form.Label>\r\n              </Col>\r\n              <Col xs={5}>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"0-10\"\r\n                  value={newRating}\r\n                  onChange={(e) => setNewRating(e.target.value)}\r\n                  isInvalid={error !== ''}\r\n                ></Form.Control>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {error}\r\n                </Form.Control.Feedback>\r\n              </Col>\r\n            </Form.Group>\r\n          )}\r\n          <div className=\"logInButtons\" data-testid = 'buttons'>\r\n            {!deleteRating && <Button variant=\"primary\" type=\"submit\" id=\"submitButton\">\r\n              Submit\r\n            </Button>}\r\n            {deleteRating && <Button variant = 'warning' onClick = {remove}>Delete</Button>}\r\n            <Button variant=\"danger\" id=\"backButton\" onClick={back}>\r\n              Back\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddRating;\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport {IMovieData, IRating} from '../types';\r\nimport {getMovie} from '../util/getMovie';\r\nimport '../styles/moviePage.css';\r\nimport {infoString} from '../util/infoString';\r\nimport MovieDetails from '../components/movieDetails';\r\nimport {useMediaQuery} from 'react-responsive';\r\nimport RatingTable from '../components/ratingTable';\r\nimport '../styles/login.css';\r\nimport AddRating from '../components/addRating';\r\nimport { FirebaseContext } from '../firebase/provider';\r\n\r\ninterface Props {\r\n  title: string;\r\n  id: string;\r\n  date: Date;\r\n  ratings: IRating[];\r\n  cage: boolean;\r\n}\r\n\r\nconst Movie = ({title, id, date, ratings, cage}: Props) => {\r\n  const [movieData, setMovieData] = useState<IMovieData>();\r\n  const [addRating, setAddRating] = useState<boolean>(false);\r\n  const [deleteRating, setDeleteRating] = useState<boolean>(false)\r\n  const isMobile = useMediaQuery({maxWidth: 700});\r\n  const userMovie = useContext(FirebaseContext).userMovie;\r\n  const userScore = userMovie.find(x=>x.name===title);\r\n  useEffect(() => {\r\n    const getMovieData = async () => {\r\n      const movie = await getMovie(id);\r\n      setMovieData(movie);\r\n    };\r\n    getMovieData();\r\n  }, [id]);\r\n\r\n  if (movieData) {\r\n    const details = (\r\n      <MovieDetails\r\n        date={date}\r\n        ratings={ratings}\r\n        vote_average={movieData.vote_average}\r\n        vote_count={movieData.vote_count}\r\n        overview={movieData.overview}\r\n        budget={movieData.budget}\r\n        revenue={movieData.revenue}\r\n        cage={cage}\r\n        addRating={() => setAddRating(true)}\r\n        deleteRating={()=>{setDeleteRating(true); setAddRating(true)}}\r\n        userRating={userScore}\r\n      />\r\n    );\r\n    return (\r\n      <div className=\"moviePage\">\r\n        {addRating && (\r\n          <AddRating\r\n            back={() => {setAddRating(false); setDeleteRating(false)}}\r\n            title={title}\r\n            userScore= {userScore}\r\n            deleteRating = {deleteRating}\r\n          />\r\n        )}\r\n        \r\n        <div\r\n          className=\"info\"\r\n          style={{backgroundImage: `url(${movieData.backdrop_path})`}}\r\n        >\r\n          <div className=\"overlay\"></div>\r\n          <div className=\"moviePoster\">\r\n            <img src={movieData.poster_path} alt=\"\" />\r\n          </div>\r\n          <div className=\"movieInfo\" data-testid=\"movieDetails\">\r\n            <div className=\"titleDiv\">\r\n              <div className=\"movieTitle\">\r\n                {`${movieData.title} (${movieData.release_date.getFullYear()})`}\r\n                <div className=\"movieTitleInfo\">\r\n                  {movieData &&\r\n                    infoString(\r\n                      movieData.release_date,\r\n                      movieData.genres,\r\n                      movieData.runtime\r\n                    )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"tagline\">{movieData.tagline}</div>\r\n            </div>\r\n            {!isMobile && details}\r\n          </div>\r\n        </div>\r\n        {isMobile && details}\r\n        <RatingTable movie = {false} title=\"Ratings\" ratings={ratings} isMobile={isMobile} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"moviePage\" data-testid=\"loadingMoviePage\">\r\n      <div className=\"info\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React, {useEffect, useState, useContext} from 'react';\r\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap';\r\nimport {useLocation} from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\nimport {AuthContext} from '../firebase/authProvider';\r\nimport { FirebaseContext } from '../firebase/provider';\r\n\r\ninterface props {\r\n  signIn: () => void;\r\n  signOut: ()=> void;\r\n}\r\n\r\nconst NavBar = ({signIn, signOut}: props) => {\r\n  const [expanded, setExpanded] = useState<boolean>(false);\r\n  const {pathname} = useLocation();\r\n  const user = useContext(AuthContext);\r\n  const displayName = useContext(FirebaseContext).displayName;\r\n  useEffect(() => {\r\n    setExpanded(false);\r\n  }, [pathname]);\r\n  return (\r\n    <Navbar\r\n      bg=\"dark\"\r\n      variant=\"dark\"\r\n      expand=\"sm\"\r\n      expanded={expanded}\r\n      onToggle={setExpanded}\r\n    >\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link as={Link} to=\"/\">\r\n            Home\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} to=\"/viewers\">\r\n            Viewers\r\n          </Nav.Link>\r\n        </Nav>\r\n        <Nav className=\"justify-content-right\">\r\n          {user && displayName ? (\r\n            <NavDropdown alignRight title = {displayName} id = 'dropdown'>\r\n              <NavDropdown.Item as={Link} to = '/profile'>Profile</NavDropdown.Item>\r\n              <NavDropdown.Item onClick= {signOut}>Sign Out</NavDropdown.Item>\r\n            </NavDropdown>\r\n          ) : (\r\n            <Nav.Link id=\"logInButton\" onClick={signIn}>\r\n              Sign In\r\n            </Nav.Link>\r\n          )}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {IMovie, IMovieData} from '../types';\r\nimport {Card} from 'react-bootstrap';\r\nimport {getMovie} from '../util/getMovie';\r\nimport {averageRating} from '../util/averageRating';\r\nimport {Link} from 'react-router-dom';\r\nimport StarRatings from 'react-star-ratings';\r\nimport '../styles/movieCard.css';\r\n\r\ninterface Props extends IMovie {}\r\n\r\nconst MovieCard = ({title, id, date, ratings}: Props) => {\r\n  const [movieData, setMovieData] = useState<IMovieData>();\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const getMovieData = async () => {\r\n      const movie = await getMovie(id);\r\n      if (mounted) {\r\n        setMovieData(movie);\r\n      }\r\n    };\r\n    getMovieData();\r\n    return ()=> {mounted = false}\r\n  }, [id]);\r\n  const averageScore = averageRating(ratings);\r\n  return (\r\n    <Card bg=\"dark\" className=\"movieCard\" data-testid=\"movieCard\">\r\n      <div className=\"imageWrapper\">\r\n        <div className=\"image\">\r\n          <img\r\n            className=\"cardImage\"\r\n            src={movieData?.poster_path}\r\n            alt={`${title} Poster`}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"bodyWrapper\">\r\n        <div className=\"body\">\r\n          <div className=\"title\">\r\n            <Link to={`/movies/${title.replace(/ /g, '-')}`}>\r\n              <Card.Title data-testid={title}>{movieData?.title}</Card.Title>\r\n            </Link>\r\n          </div>\r\n          <div className=\"averageRating\">\r\n            <div className=\"stars\">\r\n              <StarRatings\r\n                rating={averageScore / 10}\r\n                starRatedColor=\"rgb(255,223,0)\"\r\n                numberOfStars={1}\r\n                starEmptyColor={'rgb(30,30,30)'}\r\n                starDimension=\"50px\"\r\n                starSpacing=\"0px\"\r\n              />\r\n            </div>\r\n            <div className=\"score\">{averageScore.toFixed(1)}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, {useContext, useState} from 'react';\r\nimport {FirebaseContext} from '../firebase/provider';\r\nimport MovieCard from '../components/movieCard';\r\nimport Select, {OptionTypeBase} from 'react-select';\r\nimport {sortMovies} from '../util/sortMovies';\r\nimport Switch from 'react-switch';\r\n\r\nconst options = [\r\n  {value: 'dateA', label: 'Date (Ascending)'},\r\n  {value: 'dateD', label: 'Date (Descending)'},\r\n  {value: 'rateA', label: 'Rating (Ascending)'},\r\n  {value: 'rateD', label: 'Rating (Descending)'},\r\n  {value: 'titleA', label: 'Title (Ascending)'},\r\n  {value: 'titleD', label: 'Title (Descending)'},\r\n];\r\n\r\nconst Home = () => {\r\n  const [sortType, setSortType] = useState<OptionTypeBase>(options[1]);\r\n  const [cageFilter, setCageFilter] = useState<boolean>(false)\r\n  const movies = useContext(FirebaseContext).movie.slice().sort((a, b) =>\r\n    sortMovies(a, b, sortType)\r\n  );\r\n  return (\r\n    <div className=\"homePage\" data-testid = 'homePage'>\r\n      <div className=\"sort\">\r\n        <div className = 'cageFilter'>\r\n          <div className = 'filterTitle'>Cage Filter</div>\r\n          <Switch onColor = '#03AC13' uncheckedIcon = {false} checked = {cageFilter} onChange = {(checked)=>setCageFilter(checked)}/>\r\n          </div>\r\n          <label style = {{display:'none'}} htmlFor = 'sort'>Sort</label>\r\n        <Select\r\n          isSearchable={false}\r\n          className=\"select\"\r\n          options={options}\r\n          value={sortType}\r\n          onChange={setSortType}\r\n          inputId = 'sort'\r\n        />\r\n      </div>\r\n      <div className=\"home\">\r\n        {movies.filter((x)=>cageFilter ? x.cage === true : x).map((movie, i) => (\r\n          <MovieCard\r\n            key={movie.id}\r\n            title={movie.title}\r\n            date={movie.date}\r\n            id={movie.id}\r\n            ratings={movie.ratings}\r\n            cage = {movie.cage}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import {IMovie, IViewer} from '../types';\r\nimport {OptionTypeBase} from 'react-select';\r\nimport {averageRating} from './averageRating';\r\n\r\nexport const sortMovies = (\r\n  a: IMovie,\r\n  b: IMovie,\r\n  sort: OptionTypeBase\r\n): number => {\r\n  switch (sort.value) {\r\n    case 'dateA':\r\n      return a.date.getTime() - b.date.getTime();\r\n    case 'dateD':\r\n      return b.date.getTime() - a.date.getTime();\r\n    case 'rateA':\r\n      return averageRating(a.ratings) - averageRating(b.ratings);\r\n    case 'rateD':\r\n      return averageRating(b.ratings) - averageRating(a.ratings);\r\n    case 'titleA':\r\n      if (a.title > b.title) {\r\n        return 1;\r\n      } else if (a.title < b.title) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    case 'titleD':\r\n      if (a.title > b.title) {\r\n        return -1;\r\n      } else if (a.title < b.title) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    default:\r\n      return b.date.getTime() - a.date.getTime();\r\n  }\r\n};\r\n// exact same thing but with Viewers\r\nexport const sortViewers = (\r\n  a: IViewer,\r\n  b: IViewer,\r\n  sort: OptionTypeBase\r\n): number => {\r\n  switch (sort.value) {\r\n    case 'rateA':\r\n      return averageRating(a.ratings) - averageRating(b.ratings);\r\n    case 'rateD':\r\n      return averageRating(b.ratings) - averageRating(a.ratings);\r\n    case 'titleA':\r\n      if (a.name > b.name) {\r\n        return 1;\r\n      } else if (a.name < b.name) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    case 'titleD':\r\n      if (a.name > b.name) {\r\n        return -1;\r\n      } else if (a.name < b.name) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    default:\r\n      if (a.name > b.name) {\r\n        return 1;\r\n      } else if (a.name < b.name) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport {IViewer} from '../types';\r\nimport '../styles/App.css';\r\nimport {Card} from 'react-bootstrap';\r\nimport '../styles/viewerCard.css';\r\nimport {averageRating} from '../util/averageRating';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ViewerCard = ({ratings, name, id}: IViewer) => {\r\n  const highestRated = ratings.length\r\n    ? ratings.reduce((accumulator, current) =>\r\n        accumulator.score > current.score ? accumulator : current\r\n      )\r\n    : null;\r\n  const lowestRated = ratings.length\r\n    ? ratings.reduce((accumulator, current) =>\r\n        accumulator.score < current.score ? accumulator : current\r\n      )\r\n    : null;\r\n  return (\r\n    <Card bg=\"dark\" className=\"viewerCard\" data-testid=\"viewerCard\">\r\n      <Card.Header className=\"viewerCardHeader\">\r\n        <Link to={`/viewers/${id}`}>{name}</Link>\r\n      </Card.Header>\r\n      <Card.Body className=\"viewerCardBody\">\r\n        <table className=\"viewerCardTable\">\r\n          <tbody>\r\n            <tr>\r\n              <th>Ratings</th>\r\n              <td>{ratings.length}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Average</th>\r\n              <td>\r\n                {ratings.length ? `${averageRating(ratings).toFixed(\r\n                  1\r\n                )}/10` : 'N/A'}\r\n              </td>\r\n            </tr>\r\n\r\n            <tr data-testid=\"highest\">\r\n              <th>Highest</th>\r\n              <td>\r\n                {highestRated ? `${highestRated.name} (${highestRated.score}/10)`: 'N/A'}\r\n              </td>\r\n            </tr>\r\n            <tr data-testid=\"lowest\">\r\n              <th>Lowest</th>\r\n              <td>\r\n              {lowestRated ? `${lowestRated.name} (${lowestRated.score}/10)`: 'N/A'}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ViewerCard;\r\n","import React, {useContext, useState} from 'react';\r\nimport ViewerCard from '../components/viewerCard';\r\nimport Select, {OptionTypeBase} from 'react-select';\r\nimport { sortViewers } from '../util/sortMovies';\r\nimport { FirebaseContext } from '../firebase/provider';\r\n\r\n\r\nconst options = [\r\n  {value: 'rateA', label: 'Rating (Ascending)'},\r\n  {value: 'rateD', label: 'Rating (Descending)'},\r\n  {value: 'titleA', label: 'Name (Ascending)'},\r\n  {value: 'titleD', label: 'Name (Descending)'},\r\n];\r\n\r\nconst ViewerHome = () => {\r\n  const viewers = useContext(FirebaseContext).viewer;\r\n  const [sortType, setSortType] = useState<OptionTypeBase>(options[2]);\r\n  return (\r\n    <div className=\"viewerHomePage\">\r\n      <div className=\"viewerSort\">\r\n      <label style = {{display:'none'}} htmlFor = 'sort'>Sort</label>\r\n        <Select\r\n          isSearchable={false}\r\n          className=\"select\"\r\n          options={options}\r\n          value={sortType}\r\n          onChange={setSortType}\r\n          inputId = 'sort'\r\n        />\r\n      </div>\r\n      <div className=\"viewerHome\">\r\n        {viewers.slice().sort((a,b)=>sortViewers(a,b,sortType)).map((viewer) => (\r\n          <ViewerCard key={viewer.id} ratings={viewer.ratings} name={viewer.name} id={viewer.id}/>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewerHome;\r\n","import React from 'react';\r\nimport {IRating} from '../types';\r\nimport RatingTable from '../components/ratingTable';\r\nimport {useMediaQuery} from 'react-responsive'\r\n\r\ninterface IProps {\r\n  ratings: IRating[];\r\n  name: string;\r\n}\r\n\r\nconst ViewerPage = ({ratings, name}: IProps) => {\r\n  const isMobile = useMediaQuery({maxWidth:700})\r\n  return (\r\n    <div>\r\n      <RatingTable movie title = {`${name}'s Ratings`} ratings={ratings} isMobile={isMobile} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewerPage;\r\n","export default __webpack_public_path__ + \"static/media/tmdb.bb8aa703.svg\";","import React from 'react';\r\nimport tmdb from '../images/tmdb.svg'\r\n\r\n\r\nconst Footer = () =>{\r\n  return(\r\n    <div className = 'footer'>\r\n      <div>Movie images and info powered by:</div>\r\n      <a href = 'https://www.themoviedb.org/'>\r\n      <img src = {tmdb} alt = \"The Movie Database\"/>\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Footer;","import {useEffect} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nconst ScrollToTop = () => {\r\n  const {pathname} = useLocation();\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n  return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React, {useState} from 'react';\r\nimport {Form, Button, Alert} from 'react-bootstrap';\r\nimport '../styles/login.css';\r\nimport {auth} from '../firebase/config';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface props {\r\n  back: () => void;\r\n  type: 'in'| 'out';\r\n}\r\n\r\nconst LogIn = ({back, type}: props) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState<string | null>(null);\r\n  const handleSubmit = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((user) => {\r\n        back();\r\n      })\r\n      .catch((error) => {\r\n        setError(`Login Failed: ${error.message}`);\r\n      });\r\n  };\r\n \r\n  if(type === 'out'){\r\n    return (\r\n      <div className = \"logIn\">\r\n        <Alert className = 'logOutBox'variant = 'success'>\r\n          <Alert.Heading>Sign Out Successful!</Alert.Heading>\r\n            <Button onClick = {back} variant = 'outline-success'>Close</Button>\r\n        </Alert>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div className=\"logIn\">\r\n      <div className=\"logInBox\">\r\n        <div className=\"logInTitle\">\r\n          <h2>Login</h2>\r\n        </div>\r\n        <div className=\"logInErrors\">\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        </div>\r\n        <Form className=\"form\">\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <div className=\"logInButtons\">\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              id=\"submitButton\"\r\n              onClick={handleSubmit}\r\n            >\r\n              Login\r\n            </Button>\r\n            <Button variant=\"danger\" id=\"backButton\" onClick={back}>\r\n              Back\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n        <div><Link className = 'link' onClick = {back} to = '/join'>Create an Account</Link> to start ranking movies!</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","import React, {useContext, useState} from 'react';\r\nimport {Form, Button, FormControl, Alert} from 'react-bootstrap';\r\nimport '../styles/login.css';\r\nimport {auth, db} from '../firebase/config';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {AuthContext} from '../firebase/authProvider';\r\n\r\ninterface Errors {\r\n  displayName: string;\r\n  confirmPassword: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst SignUp = () => {\r\n  const [email, setEmail] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n  const [confirmPassword, setConfirmPassword] = useState<string>('');\r\n  const [displayName, setDisplayName] = useState<string>('');\r\n  const [errors, setErrors] = useState<Errors>({\r\n    displayName: '',\r\n    confirmPassword: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [accountCreated, setAccountCreated] = useState<boolean>(false);\r\n  const [alreadySignedIn, setAlreadySignedIn] = useState<boolean>(false);\r\n  const history = useHistory();\r\n  const user = useContext(AuthContext);\r\n\r\n  const handleSubmit = () => {\r\n    //set all errors back to empty string\r\n    setErrors({displayName: '', confirmPassword: '', email: '', password: ''});\r\n    let formHasErrors = false;\r\n    //check for my errors first before attempting to create with firebase\r\n    \r\n    if (displayName.length <= 2) {\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        displayName: 'Display Name must be at least 3 characters',\r\n      }));\r\n      formHasErrors = true;\r\n    } else if (!/^[a-zA-Z]+$/g.test(displayName)) {\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        displayName: 'Display Name can only be letters',\r\n      }));\r\n      formHasErrors = true;\r\n    }\r\n    if (confirmPassword !== password) {\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        confirmPassword: 'Passwords do not match',\r\n      }));\r\n      formHasErrors = true;\r\n    }\r\n    if (!formHasErrors) {\r\n      //if there were no errors, try to make the user\r\n      if (user) {\r\n        //if the user is alraedy signed in, don't let them make a new account\r\n        setAlreadySignedIn(true);\r\n      } else {\r\n        //if there are no errors:\r\n        //1. create the user\r\n        //2. add user info to said user\r\n        //3. add user to the database\r\n        auth\r\n          .createUserWithEmailAndPassword(email, password)\r\n          .then((newUser) => {\r\n            if(newUser.user){\r\n            newUser.user\r\n              .updateProfile({displayName: displayName})\r\n              .catch((e) => console.log(e.message));\r\n            db.ref('/users').child(`${newUser.user.uid}`).set({displayName}).then(()=>{\r\n              setAccountCreated(true);\r\n            }).catch(e=>console.log(e.message))\r\n            \r\n          }})\r\n          .catch((e) => {\r\n            if (e.message.toLowerCase().includes('email')) {\r\n              setErrors((prev) => ({...prev, email: e.message}));\r\n            }\r\n            if (e.message.toLowerCase().includes('password')) {\r\n              setErrors((prev) => ({...prev, password: e.message}));\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"signUp\">\r\n      {accountCreated && (\r\n        <div className=\"logIn\">\r\n          <Alert className=\"logOutBox\" variant=\"success\">\r\n            <Alert.Heading>Success!</Alert.Heading>\r\n            <p>Your account has been created!</p>\r\n            <Button variant=\"outline-success\" onClick={() => history.push('/')}>\r\n              Continue to Home Page\r\n            </Button>\r\n          </Alert>\r\n        </div>\r\n      )}\r\n      {alreadySignedIn && (\r\n        <div className=\"logIn\">\r\n          <Alert className=\"logOutBox\" variant=\"danger\">\r\n            <Alert.Heading>Already Signed In</Alert.Heading>\r\n            <p>\r\n              Please sign out of the current account before making a new one.\r\n            </p>\r\n            <Button\r\n              variant=\"outline-danger\"\r\n              onClick={() => setAlreadySignedIn(false)}\r\n            >\r\n              Back\r\n            </Button>\r\n          </Alert>\r\n        </div>\r\n      )}\r\n      <div className=\"signUpTitle\">\r\n        <h2>Join Movie Ratings</h2>\r\n      </div>\r\n      <Form className=\"signUpForm\">\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n            isInvalid={errors.email !== ''}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicDisplay\">\r\n          <Form.Label>Display Name</Form.Label>\r\n          <Form.Control\r\n            placeholder=\"Display Name\"\r\n            onChange={(e) => {\r\n              if (e.target.value.length <= 12) {\r\n                setDisplayName(e.target.value);\r\n              }\r\n            }}\r\n            value={displayName}\r\n            isInvalid={errors.displayName !== ''}\r\n          />\r\n          <FormControl.Feedback type=\"invalid\">\r\n            {errors.displayName}\r\n          </FormControl.Feedback>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            isInvalid={errors.password !== ''}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicConfirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            isInvalid={errors.confirmPassword !== ''}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.confirmPassword}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <div className=\"logInButtons\">\r\n          <Button variant=\"primary\" id=\"joinButton\" onClick={handleSubmit}>\r\n            Join\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, {useContext} from 'react';\r\nimport {Redirect, Route, RouteProps} from 'react-router-dom';\r\nimport {AuthContext} from '../firebase/authProvider';\r\n\r\n\r\n\r\nconst ProtectedRoute = ({children, ...rest}: RouteProps) => {\r\n  const authenticated = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() => (authenticated ? children : <Redirect to=\"/\" />)}\r\n    ></Route>\r\n  );\r\n};\r\n\r\n\r\nexport default ProtectedRoute;","import React, {useContext, useState} from 'react';\r\nimport {Form, Button, Alert, Row, Col} from 'react-bootstrap';\r\nimport '../styles/login.css';\r\nimport '../styles/profile.css';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport {AuthContext} from '../firebase/authProvider';\r\nimport {db} from '../firebase/config';\r\nimport {FirebaseContext} from '../firebase/provider';\r\ninterface Props {\r\n  type: 'Password' | 'Email' | 'Name' | 'Delete';\r\n  currentEmail: string;\r\n  currentName: string;\r\n  back: () => void;\r\n}\r\ninterface Errors {\r\n  displayName: string;\r\n  confirmPassword: string;\r\n  email: string;\r\n  password: string;\r\n  currentPassword: string;\r\n}\r\n\r\nconst ChangeProfileInfo = ({type, back, currentEmail, currentName}: Props) => {\r\n  const [success, setSuccess] = useState<boolean>(false);\r\n  const [password, setPassword] = useState<string>('');\r\n  const [confirmPassword, setConfirmPassword] = useState<string>('');\r\n  const [currentPassword, setCurrentPassword] = useState<string>('');\r\n  const [email, setEmail] = useState<string>('');\r\n  const [name, setName] = useState<string>('');\r\n  const [deleteText, setDeleteText] = useState<string>('');\r\n  const user = useContext(AuthContext)!; //user must exist to access this page\r\n  const userMovies = useContext(FirebaseContext).userMovie;\r\n  const [errors, setErrors] = useState<Errors>({\r\n    displayName: '',\r\n    confirmPassword: '',\r\n    email: '',\r\n    password: '',\r\n    currentPassword: '',\r\n  });\r\n  const handleSubmit = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    setErrors({\r\n      displayName: '',\r\n      confirmPassword: '',\r\n      email: '',\r\n      password: '',\r\n      currentPassword: '',\r\n    });\r\n    //reauthenticate the user\r\n    const cred = firebase.auth.EmailAuthProvider.credential(\r\n      currentEmail,\r\n      currentPassword\r\n    );\r\n    switch (type) {\r\n      case 'Email':\r\n        user\r\n          .reauthenticateWithCredential(cred)\r\n          .then((userCredential) => {\r\n            userCredential.user\r\n              ?.updateEmail(email)\r\n              .then(() => {\r\n                setSuccess(true);\r\n              })\r\n              .catch((e) => {\r\n                setErrors((prev) => ({...prev, email: e.message}));\r\n              });\r\n          })\r\n          .catch((e) => {\r\n            setErrors((prev) => ({...prev, currentPassword: e.message}));\r\n          });\r\n        break;\r\n      case 'Name':\r\n        if (name.length < 3) {\r\n          setErrors((prev) => ({\r\n            ...prev,\r\n            displayName: 'Name must be at least 3 characters.',\r\n          }));\r\n        } else if (!/^[a-zA-Z]+$/g.test(name)) {\r\n          setErrors((prev) => ({\r\n            ...prev,\r\n            displayName: 'Name can only contain letters.',\r\n          }));\r\n        } else {\r\n          //need to update display name in users and at each movie where it appears\r\n          let updates: {[key: string]: any} = {};\r\n          updates[`users/${user.uid}/displayName`] = name;\r\n          userMovies.forEach((movie) => {\r\n            updates[`movies/${movie.name}/ratings/${user.uid}/displayName`] =\r\n              name;\r\n          });\r\n          db.ref()\r\n            .update(updates)\r\n            .then(() => {\r\n              user\r\n                .updateProfile({displayName: name})\r\n                .then(() => {\r\n                  setSuccess(true);\r\n                })\r\n                .catch((e) => {\r\n                  setErrors((prev) => ({...prev, displayName: e.message}));\r\n                });\r\n            })\r\n            .catch((e) =>\r\n              setErrors((prev) => ({...prev, displayName: e.message}))\r\n            );\r\n        }\r\n        break;\r\n      case 'Password':\r\n        if (password !== confirmPassword) {\r\n          setErrors((prev) => ({\r\n            ...prev,\r\n            confirmPassword: 'Passwords do not match',\r\n          }));\r\n        } else {\r\n          //then reauth user\r\n          user\r\n            .reauthenticateWithCredential(cred)\r\n            .then((userCredential) => {\r\n              //if user authorized, change password\r\n              userCredential.user\r\n                ?.updatePassword(password)\r\n                .then(() => {\r\n                  setSuccess(true);\r\n                })\r\n                .catch((e) => {\r\n                  setErrors((prev) => ({...prev, password: e.message}));\r\n                });\r\n            })\r\n            .catch((e) => {\r\n              setErrors((prev) => ({...prev, currentPassword: e.message}));\r\n            });\r\n        }\r\n        break;\r\n      case 'Delete':\r\n        //delete all the users ratings\r\n        user\r\n          .reauthenticateWithCredential(cred)\r\n          .then((userCredential) => {\r\n            if (userCredential.user) {\r\n              const reCred = userCredential.user;\r\n              const deleteDB: {[key: string]: any} = {};\r\n              userMovies.forEach((movie) => {\r\n                deleteDB[`movies/${movie.name}/ratings/${reCred.uid}`] = null;\r\n              });\r\n              deleteDB[`users/${reCred.uid}`] = null;\r\n              db.ref()\r\n                .update(deleteDB)\r\n                .then(() => {\r\n                  reCred\r\n                    .delete()\r\n                    .then(() => {\r\n                      setSuccess(true);\r\n                    })\r\n                    .catch((e) => {\r\n                      setErrors((prev) => ({\r\n                        ...prev,\r\n                        currentPassword: e.message,\r\n                      }));\r\n                    });\r\n                })\r\n                .catch((e) => {\r\n                  setErrors((prev) => ({...prev, currentPassword: e.message}));\r\n                });\r\n            }\r\n          })\r\n          .catch((e) => {\r\n            setErrors((prev) => ({...prev, currentPassword: e.message}));\r\n          });\r\n        break;\r\n    }\r\n  };\r\n  if (success) {\r\n    return (\r\n      <div className=\"logIn\">\r\n        <Alert className=\"logOutBox\" variant=\"success\">\r\n          <Alert.Heading>Success!</Alert.Heading>\r\n          <p>Your {type} has been changed.</p>\r\n          <Button variant=\"outline-success\" onClick={back}>\r\n            Close\r\n          </Button>\r\n        </Alert>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"logIn\">\r\n      <div className=\"logInBox\">\r\n        <div className=\"logInTitle\">\r\n          {type !== 'Delete' && <h2>Change {type}</h2>}\r\n          {type === 'Delete' && <h2>Delete Account</h2>}\r\n        </div>\r\n        <Form className=\"form\">\r\n          {type === 'Email' && (\r\n            <>\r\n              <Form.Group as={Row} controlId=\"formBasicEmail\">\r\n                <Form.Label column>Current Email:</Form.Label>\r\n                <Col>\r\n                  <Form.Control\r\n                    className=\"plainText\"\r\n                    plaintext\r\n                    readOnly\r\n                    defaultValue={currentEmail}\r\n                  ></Form.Control>\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"newEmailForm\">\r\n                <Form.Label>New Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter New Email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  value={email}\r\n                  isInvalid={errors.email !== ''}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.email}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicCurrentPassword\">\r\n                <Form.Label>Current Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Current Password\"\r\n                  value={currentPassword}\r\n                  onChange={(e) => setCurrentPassword(e.target.value)}\r\n                  isInvalid={errors.currentPassword !== ''}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.currentPassword}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </>\r\n          )}\r\n          {type === 'Name' && (\r\n            <>\r\n              <Form.Group as={Row} controlId=\"formBasicName\">\r\n                <Form.Label column>Current Name:</Form.Label>\r\n                <Col>\r\n                  <Form.Control\r\n                    className=\"plainText\"\r\n                    plaintext\r\n                    readOnly\r\n                    defaultValue={currentName}\r\n                  ></Form.Control>\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"newNameForm\">\r\n                <Form.Label>New Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter New Name\"\r\n                  onChange={(e) => {\r\n                    if (e.target.value.length <= 12) {\r\n                      setName(e.target.value);\r\n                    }\r\n                  }}\r\n                  value={name}\r\n                  isInvalid={errors.displayName !== ''}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.displayName}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </>\r\n          )}\r\n          {type === 'Password' && (\r\n            <>\r\n              <Form.Group controlId=\"formBasicCurrentPassword\">\r\n                <Form.Label>Current Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Current Password\"\r\n                  value={currentPassword}\r\n                  onChange={(e) => setCurrentPassword(e.target.value)}\r\n                  isInvalid={errors.currentPassword !== ''}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.currentPassword}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicNewPassword\">\r\n                <Form.Label>New Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"New Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  isInvalid={errors.password !== ''}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.password}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicConfirmPassword\">\r\n                <Form.Label>Confirm New Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm New Password\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  isInvalid={errors.confirmPassword !== ''}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.confirmPassword}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </>\r\n          )}\r\n          {type === 'Delete' && (\r\n            <>\r\n              <Form.Text className=\"warning\">\r\n                Warning: This action will permanently delete your account!\r\n              </Form.Text>\r\n              <Form.Group controlId=\"formBasicCurrentPassword\">\r\n                <Form.Label>Current Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Current Password\"\r\n                  value={currentPassword}\r\n                  onChange={(e) => setCurrentPassword(e.target.value)}\r\n                  isInvalid={errors.currentPassword !== ''}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.currentPassword}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"delete\">\r\n                <Form.Label>Enter 'DELETE' to delete your account.</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"enter DELETE\"\r\n                  onChange={(e) => setDeleteText(e.target.value)}\r\n                  value={deleteText}\r\n                />\r\n              </Form.Group>\r\n            </>\r\n          )}\r\n          <div className=\"logInButtons\" data-testid=\"buttons\">\r\n            {type !== 'Delete' && (\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"submit\"\r\n                id=\"submitButton\"\r\n                onClick={handleSubmit}\r\n              >\r\n                Submit\r\n              </Button>\r\n            )}\r\n            {type === 'Delete' && (\r\n              <Button\r\n                variant=\"warning\"\r\n                id=\"deleteButton\"\r\n                onClick={handleSubmit}\r\n                disabled={deleteText !== 'DELETE'}\r\n              >\r\n                Delete Account\r\n              </Button>\r\n            )}\r\n            <Button variant=\"danger\" id=\"backButton\" onClick={back}>\r\n              Back\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeProfileInfo;\r\n","import React, {useContext, useState} from 'react';\r\nimport {useMediaQuery} from 'react-responsive';\r\nimport {AuthContext} from '../firebase/authProvider';\r\nimport {FirebaseContext} from '../firebase/provider';\r\nimport '../styles/profile.css';\r\nimport {averageRating} from '../util/averageRating';\r\nimport ChangeProfileInfo from '../components/changeProfileInfo';\r\nimport RatingTable from '../components/ratingTable';\r\nimport '../styles/viewerCard.css';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nconst Profile = () => {\r\n  const [showChange, setShowChange] = useState<\r\n    'Password' | 'Name' | 'Email' | 'Delete' | null\r\n  >(null);\r\n  const user = useContext(AuthContext)!;\r\n  const isMobile = useMediaQuery({maxWidth: 700});\r\n  const userMovies = useContext(FirebaseContext).userMovie;\r\n  const highestRated = userMovies.length\r\n    ? userMovies.reduce((accumulator, current) =>\r\n        accumulator.score > current.score ? accumulator : current\r\n      )\r\n    : null;\r\n  const lowestRated = userMovies.length\r\n    ? userMovies.reduce((accumulator, current) =>\r\n        accumulator.score < current.score ? accumulator : current\r\n      )\r\n    : null;\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      {showChange && (\r\n        <ChangeProfileInfo\r\n          type={showChange}\r\n          currentEmail={user.email!}\r\n          currentName={user.displayName!}\r\n          back={() => setShowChange(null)}\r\n        />\r\n      )}\r\n      <div className=\"settings\">\r\n        <div className=\"settingsTitle\">Account Settings</div>\r\n        <div className=\"settingsBody\">\r\n          <div className=\"settingsInfo\">\r\n            <table className=\"infoTable\">\r\n              <tbody>\r\n                <tr data-testid = 'email'>\r\n                  <td>Email</td>\r\n                  <td>{user.email}</td>\r\n                  <td className=\"change\" onClick={() => setShowChange('Email')}>\r\n                    Change\r\n                  </td>\r\n                </tr>\r\n                <tr data-testid = 'name'>\r\n                  <td>Display Name</td>\r\n                  <td>{user.displayName}</td>\r\n                  <td className=\"change\" onClick={() => setShowChange('Name')}>\r\n                    Change\r\n                  </td>\r\n                </tr>\r\n                <tr data-testid = 'password'>\r\n                  <td>Password</td>\r\n                  <td>N/A</td>\r\n                  <td\r\n                    className=\"change\"\r\n                    onClick={() => setShowChange('Password')}\r\n                  >\r\n                    Change\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"settings\">\r\n        <div className=\"settingsTitle\">My Ratings</div>\r\n        <div className=\"setttingsBody\">\r\n          <table className=\"ratingInfo\">\r\n            <tbody>\r\n              <tr>\r\n                <td>Movies Watched:</td>\r\n                <td>{userMovies.length}</td>\r\n              </tr>\r\n              <tr data-testid = 'avg'>\r\n                <td>Average Rating:</td>\r\n                <td>\r\n                  {userMovies.length\r\n                    ? `${averageRating(userMovies)}/10`\r\n                    : 'N/A'}\r\n                </td>\r\n              </tr>\r\n              <tr data-testid = 'highest'>\r\n                <td>Highest Rated:</td>\r\n                <td>\r\n                  {highestRated\r\n                    ? `${highestRated.name} (${highestRated.score}/10)`\r\n                    : 'N/A'}\r\n                </td>\r\n              </tr>\r\n              <tr data-testid = 'lowest'>\r\n                <td>Lowest Rated:</td>\r\n                <td>\r\n                  {lowestRated\r\n                    ? `${lowestRated.name} (${lowestRated.score}/10)`\r\n                    : 'N/A'}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          {!!userMovies.length && (\r\n            <RatingTable\r\n              movie\r\n              ratings={userMovies}\r\n              isMobile={isMobile}\r\n              title=\"\"\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"delete\">\r\n        <Button variant=\"danger\" onClick={() => setShowChange('Delete')}>\r\n          Delete Account\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, {useContext, useState} from 'react';\r\nimport {FirebaseContext} from './firebase/provider';\r\nimport {HashRouter as Router, Route} from 'react-router-dom';\r\nimport Movie from './pages/movie';\r\nimport NavBar from './components/navBar';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Home from './pages/home';\r\nimport ViewerHome from './pages/viewerHome';\r\nimport ViewerPage from './pages/viewerPage';\r\nimport Footer from './components/footer';\r\nimport ScrollToTop from './components/scrollToTop';\r\nimport LogIn from './components/logIn';\r\nimport {auth} from './firebase/config';\r\nimport SignUp from './pages/SignUp';\r\n\r\nimport ProtectedRoute from './components/protectedRoute';\r\nimport Profile from './pages/profile';\r\nconst App = () => {\r\n  const movies = useContext(FirebaseContext).movie;\r\n  const viewers = useContext(FirebaseContext).viewer;\r\n  const [login, setLogin] = useState<boolean>(false);\r\n  const [logOut, setLogOut] = useState<boolean>(false);\r\n  \r\n  const signOut = () => {\r\n    auth\r\n      .signOut()\r\n      .then(() => {\r\n        setLogOut(true);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e.message);\r\n      });\r\n  };\r\n  return (\r\n    <div style={{position: 'relative'}}>\r\n      <Router>\r\n      {login && <LogIn type=\"in\" back={() => setLogin(false)} />}\r\n      {logOut && <LogIn type=\"out\" back={() => setLogOut(false)} />}\r\n        <ScrollToTop />\r\n        <NavBar signOut={signOut} signIn={() => setLogin(true)} />\r\n        <div className=\"appBody\">\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path = '/join'>\r\n            <SignUp/>\r\n          </Route>\r\n          <ProtectedRoute path = '/profile'>\r\n              <Profile/>\r\n            </ProtectedRoute>\r\n          {movies.map((movie, i) => (\r\n            <Route path={`/movies/${movie.title.replace(/ /g, '-')}`} key={i}>\r\n              <Movie\r\n                title={movie.title}\r\n                ratings={movie.ratings}\r\n                id={movie.id}\r\n                date={movie.date}\r\n                cage={movie.cage}\r\n              />\r\n            </Route>\r\n          ))}\r\n          <Route exact path=\"/viewers\">\r\n            <ViewerHome/>\r\n          </Route>\r\n          {viewers.map((viewer, i) => (\r\n            <Route key={i} path={`/viewers/${viewer.id}`}>\r\n              <ViewerPage name={viewer.name} ratings={viewer.ratings} />\r\n            </Route>\r\n          ))}\r\n        </div>\r\n      </Router>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'firebase/database';\r\nimport './styles/App.css';\r\nimport FirebaseContext from './firebase/provider';\r\nimport AuthProvider from './firebase/authProvider';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthProvider>\r\n      <FirebaseContext>\r\n        <App />\r\n      </FirebaseContext>\r\n    </AuthProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}